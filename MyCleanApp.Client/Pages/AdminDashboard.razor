@inject HttpClient Http
@inject IJSRuntime JS
@using System.Text.Json

@page "/admin-dashboard"

@code {
    private int totalDocentes = 0;  
    public class TotalDocentesResponse
    {
        public int totalDocentes { get; set; }
    }
    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetStringAsync("http://localhost:3000/totalDocentes");
        var result = JsonSerializer.Deserialize<TotalDocentesResponse>(response);

if (result != null)
        {
            totalDocentes = result.totalDocentes;
        }
    }
}
<div class="container mx-auto px-4 py-8">
    <div class="flex flex-col md:flex-row justify-between items-start gap-4 mb-8">
        <div>
            <h1 class="text-3xl font-bold">Panel de Administración</h1>
            <p class="text-gray-600">Gestión de docentes y evaluaciones</p>
        </div>
        <div class="flex gap-2">
            <button class="border border-gray-300 bg-white hover:bg-gray-50 text-gray-700 font-medium py-2 px-4 rounded-md transition-colors flex items-center">
                <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
                    />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                Configuración
            </button>
            <button class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors flex items-center">
                <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                Añadir Docente
            </button>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
        <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
            <div class="p-4 pb-2">
                <div class="text-sm font-medium text-gray-600">Total de Docentes</div>
            </div>
            <div class="p-4 pt-0">
                <div class="text-2xl font-bold">@totalDocentes</div>
            </div>
        </div>
        <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
            <div class="p-4 pb-2">
                <div class="text-sm font-medium text-gray-600">Elegibles para Promoción</div>
            </div>
            <div class="p-4 pt-0 flex items-end justify-between">
                <div class="text-2xl font-bold">@_promotionEligibleCount</div>
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                    @Math.Round(((double)_promotionEligibleCount / _teachersData.Count) * 100)%
                </span>
            </div>
        </div>
        <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
            <div class="p-4 pb-2">
                <div class="text-sm font-medium text-gray-600">Evaluaciones Pendientes</div>
            </div>
            <div class="p-4 pt-0">
                <div class="text-2xl font-bold">3</div>
            </div>
        </div>
        <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
            <div class="p-4 pb-2">
                <div class="text-sm font-medium text-gray-600">Próximas Revisiones</div>
            </div>
            <div class="p-4 pt-0">
                <div class="text-2xl font-bold">7</div>
            </div>
        </div>
    </div>

    @* Tabs *@
    <div class="space-y-4">
        <div class="border-b border-gray-200">
            <nav class="-mb-px flex space-x-8">
                @foreach (var tab in new[] { (Id: "teachers", Label: "Docentes"), (Id: "evaluations", Label: "Evaluaciones"), (Id: "promotions", Label: "Promociones"), (Id: "reports", Label: "Informes") })
                {
                    <button
                        @onclick="() => SetActiveTab(tab.Id)"
                        class="py-2 px-1 border-b-2 font-medium text-sm @(_activeTab == tab.Id ? "border-blue-500 text-blue-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300")"
                    >
                        @tab.Label
                    </button>
                }
            </nav>
        </div>

        @* Tab Content *@
        @if (_activeTab == "teachers")
        {
            <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                <div class="p-6">
                    <h3 class="text-lg font-medium mb-2">Listado de Docentes</h3>
                    <p class="text-sm text-gray-600 mb-4">Gestiona los perfiles de docentes y sus niveles</p>

                    <div class="flex flex-col md:flex-row gap-4 mb-4">
                        <div class="relative flex-1">
                            <svg
                                class="absolute left-2 top-2.5 h-4 w-4 text-gray-500"
                                fill="none"
                                stroke="currentColor"
                                viewBox="0 0 24 24"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                                />
                            </svg>
                            <input
                                placeholder="Buscar por nombre..."
                                class="pl-8 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                @bind="_searchQuery"
                            />
                        </div>
                        <div class="flex gap-2">
                            <div class="relative">
                                <button
                                    @onclick="ToggleLevelDropdown"
                                    class="border border-gray-300 bg-white hover:bg-gray-50 text-gray-700 font-medium py-2 px-4 rounded-md transition-colors flex items-center"
                                >
                                    <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"
                                        />
                                    </svg>
                                    Nivel: @_levelFilter == "all" ? "Todos" : _levelFilter
                                </button>
                                @if (_showLevelDropdown)
                                {
                                    <div class="absolute right-0 mt-2 w-48 bg-white border border-gray-200 rounded-md shadow-lg z-10">
                                        <div class="py-1">
                                            <button
                                                @onclick='() => SetLevelFilter("all")'
                                                class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                                            >
                                                Todos
                                            </button>
                                            @foreach (var level in new[] { "DT.1", "DT.2", "DT.3", "DT.4", "DT.5" })
                                            {
                                                <button
                                                    @onclick='() => SetLevelFilter(level)'
                                                    class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                                                >
                                                    @level
                                                </button>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="border rounded-lg overflow-hidden">
                        <table class="w-full">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Docente
                                    </th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Nivel
                                    </th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden md:table-cell">
                                        Años
                                    </th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden md:table-cell">
                                        Papers
                                    </th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden lg:table-cell">
                                        Evaluación
                                    </th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Estado
                                    </th>
                                    <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Acciones
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200 bg-white">
                                @foreach (var teacher in _filteredTeachers)
                                {
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-4 py-3 whitespace-nowrap">
                                            <div class="font-medium">@teacher.Name</div>
                                        </td>
                                        <td class="px-4 py-3 whitespace-nowrap">
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium font-semibold bg-blue-50">
                                                @teacher.Level
                                            </span>
                                        </td>
                                        <td class="px-4 py-3 whitespace-nowrap hidden md:table-cell">
                                            <div class="flex items-center">
                                                <svg
                                                    class="mr-1 h-4 w-4 text-gray-500"
                                                    fill="none"
                                                    stroke="currentColor"
                                                    viewBox="0 0 24 24"
                                                >
                                                    <path
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                                                    />
                                                </svg>
                                                @teacher.Years años
                                            </div>
                                        </td>
                                        <td class="px-4 py-3 whitespace-nowrap hidden md:table-cell">
                                            <div class="flex items-center">
                                                <svg
                                                    class="mr-1 h-4 w-4 text-gray-500"
                                                    fill="none"
                                                    stroke="currentColor"
                                                    viewBox="0 0 24 24"
                                                >
                                                    <path
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                                                    />
                                                </svg>
                                                @teacher.Papers
                                            </div>
                                        </td>
                                        <td class="px-4 py-3 whitespace-nowrap hidden lg:table-cell">
                                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(teacher.Evaluation >= 75 ? "bg-green-100 text-green-800" : "bg-amber-100 text-amber-800")">
                                                @teacher.Evaluation%
                                            </span>
                                        </td>
                                        <td class="px-4 py-3 whitespace-nowrap">
                                            @if (teacher.PromotionReady)
                                            {
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                    Elegible para promoción
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border border-gray-300 bg-white text-gray-700">
                                                    En progreso
                                                </span>
                                            }
                                        </td>
                                        <td class="px-4 py-3 whitespace-nowrap text-right">
                                            <button class="text-gray-400 hover:text-gray-600 p-1">
                                                <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"
                                                    />
                                                </svg>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="px-6 py-4 flex justify-between border-t border-gray-200">
                    <div class="text-sm text-gray-500">
                        Mostrando @_filteredTeachers.Count de @_teachersData.Count docentes
                    </div>
                    <button class="border border-gray-300 bg-white hover:bg-gray-50 text-gray-700 font-medium py-1 px-3 rounded-md text-sm transition-colors">
                        Exportar Lista
                    </button>
                </div>
            </div>
        }

        @if (_activeTab == "evaluations")
        {
            <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                <div class="p-6">
                    <h3 class="text-lg font-medium mb-2">Evaluaciones</h3>
                    <p class="text-sm text-gray-600 mb-4">Gestiona las evaluaciones de desempeño docente</p>
                    <div class="border rounded-lg p-8 text-center">
                        <svg
                            class="h-16 w-16 mx-auto mb-4 text-blue-500"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5z" />
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z"
                            />
                        </svg>
                        <h3 class="text-lg font-medium">Módulo de evaluaciones</h3>
                        <p class="text-sm text-gray-500 mb-4 max-w-md mx-auto">
                            Aquí podrás gestionar las evaluaciones de desempeño docente, configurar criterios y generar informes.
                        </p>
                        <button class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors">
                            Acceder a Evaluaciones
                        </button>
                    </div>
                </div>
            </div>
        }

        @if (_activeTab == "promotions")
        {
            <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                <div class="p-6">
                    <h3 class="text-lg font-medium mb-2">Gestión de Promociones</h3>
                    <p class="text-sm text-gray-600 mb-4">Docentes elegibles para promoción y requisitos</p>
                    <div class="space-y-4">
                        <div class="border rounded-lg overflow-hidden">
                            <div class="bg-blue-50 p-4">
                                <h3 class="font-medium">Docentes Elegibles para Promoción</h3>
                            </div>

                            <div class="divide-y">
                                @foreach (var teacher in _teachersData.Where(t => t.PromotionReady))
                                {
                                    <div class="p-4">
                                        <div class="flex flex-col md:flex-row justify-between gap-4">
                                            <div>
                                                <div class="font-medium flex items-center">
                                                    @teacher.Name
                                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-50">
                                                        @teacher.Level
                                                    </span>
                                                    <span class="mx-2 text-gray-400">→</span>
                                                    @if (_levelRequirements.ContainsKey(teacher.Level))
                                                    {
                                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-50 border-green-200 text-green-700">
                                                            @_levelRequirements[teacher.Level].NextLevel
                                                        </span>
                                                    }
                                                </div>

                                                <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-4">
                                                    <div class="flex items-center">
                                                        <svg
                                                            class="h-4 w-4 text-blue-500 mr-2"
                                                            fill="none"
                                                            stroke="currentColor"
                                                            viewBox="0 0 24 24"
                                                        >
                                                            <path
                                                                stroke-linecap="round"
                                                                stroke-linejoin="round"
                                                                stroke-width="2"
                                                                d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                                                            />
                                                        </svg>
                                                        <div>
                                                            <div class="text-xs text-gray-500">Años</div>
                                                            <div class="font-medium">
                                                                @teacher.Years/
                                                                @(_levelRequirements.ContainsKey(teacher.Level) ? _levelRequirements[teacher.Level].Years.ToString() : "N/A")
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="flex items-center">
                                                        <svg
                                                            class="h-4 w-4 text-blue-500 mr-2"
                                                            fill="none"
                                                            stroke="currentColor"
                                                            viewBox="0 0 24 24"
                                                        >
                                                            <path
                                                                stroke-linecap="round"
                                                                stroke-linejoin="round"
                                                                stroke-width="2"
                                                                d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                                                            />
                                                        </svg>
                                                        <div>
                                                            <div class="text-xs text-gray-500">Papers</div>
                                                            <div class="font-medium">
                                                                @teacher.Papers/
                                                                @(_levelRequirements.ContainsKey(teacher.Level) ? _levelRequirements[teacher.Level].Papers.ToString() : "N/A")
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="flex items-center">
                                                        <svg
                                                            class="h-4 w-4 text-blue-500 mr-2"
                                                            fill="none"
                                                            stroke="currentColor"
                                                            viewBox="0 0 24 24"
                                                        >
                                                            <path
                                                                stroke-linecap="round"
                                                                stroke-linejoin="round"
                                                                stroke-width="2"
                                                                d="M12 14l9-5-9-5-9 5 9 5z"
                                                            />
                                                        </svg>
                                                        <div>
                                                            <div class="text-xs text-gray-500">Evaluación</div>
                                                            <div class="font-medium">@teacher.Evaluation%</div>
                                                        </div>
                                                    </div>
                                                    <div class="flex items-center">
                                                        <svg
                                                            class="h-4 w-4 text-blue-500 mr-2"
                                                            fill="none"
                                                            stroke="currentColor"
                                                            viewBox="0 0 24 24"
                                                        >
                                                            <path
                                                                stroke-linecap="round"
                                                                stroke-linejoin="round"
                                                                stroke-width="2"
                                                                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                                                            />
                                                        </svg>
                                                        <div>
                                                            <div class="text-xs text-gray-500">Horas capacitación</div>
                                                            <div class="font-medium">
                                                                @teacher.Training/
                                                                @(_levelRequirements.ContainsKey(teacher.Level) ? _levelRequirements[teacher.Level].Training.ToString() : "N/A")
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="flex items-center">
                                                <button class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors">
                                                    Iniciar Proceso
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                            <div class="p-6">
                                <h3 class="text-lg font-medium mb-4">Requisitos de Promoción por Nivel</h3>
                                <div class="overflow-x-auto">
                                    <table class="w-full border-collapse">
                                        <thead>
                                            <tr class="bg-gray-50">
                                                <th class="border px-4 py-2 text-left">Nivel Actual</th>
                                                <th class="border px-4 py-2 text-left">Nivel Objetivo</th>
                                                <th class="border px-4 py-2 text-left">Años en Nivel</th>
                                                <th class="border px-4 py-2 text-left">Papers</th>
                                                <th class="border px-4 py-2 text-left">Evaluación</th>
                                                <th class="border px-4 py-2 text-left">Horas Capacitación</th>
                                                <th class="border px-4 py-2 text-left">Meses Investigación</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var entry in _levelRequirements)
                                            {
                                                <tr>
                                                    <td class="border px-4 py-2">@entry.Key</td>
                                                    <td class="border px-4 py-2">@entry.Value.NextLevel</td>
                                                    <td class="border px-4 py-2">@entry.Value.Years</td>
                                                    <td class="border px-4 py-2">@entry.Value.Papers</td>
                                                    <td class="border px-4 py-2">@entry.Value.Evaluation%</td>
                                                    <td class="border px-4 py-2">@entry.Value.Training</td>
                                                    <td class="border px-4 py-2">@(entry.Value.Research == 0 ? "-" : entry.Value.Research.ToString())</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (_activeTab == "reports")
        {
            <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
                <div class="p-6">
                    <h3 class="text-lg font-medium mb-2">Informes</h3>
                    <p class="text-sm text-gray-600 mb-4">Genera informes y estadísticas de docentes</p>
                    <div class="border rounded-lg p-8 text-center">
                        <svg
                            class="h-16 w-16 mx-auto mb-4 text-blue-500"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                        </svg>
                        <h3 class="text-lg font-medium">Módulo de informes</h3>
                        <p class="text-sm text-gray-500 mb-4 max-w-md mx-auto">
                            Accede a informes detallados sobre el rendimiento docente, historial de promociones y más.
                        </p>
                        <button class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors">
                            Generar Informe
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    // Model for Teacher Data
    public class AdminTeacher
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string Level { get; set; } = string.Empty;
        public int Years { get; set; }
        public int Papers { get; set; }
        public int Evaluation { get; set; }
        public int Training { get; set; }
        public int Research { get; set; }
        public bool PromotionReady { get; set; }
    }

    // Model for Level Requirements
    public class AdminLevelRequirement
    {
        public string NextLevel { get; set; } = string.Empty;
        public int Years { get; set; }
        public int Papers { get; set; }
        public int Evaluation { get; set; }
        public int Training { get; set; }
        public int Research { get; set; }
    }

    // Mock data for demonstration purposes
    private List<AdminTeacher> _teachersData = new List<AdminTeacher>
    {
        new AdminTeacher { Id = 1, Name = "María García", Level = "DT.2", Years = 3, Papers = 1, Evaluation = 82, Training = 80, Research = 8, PromotionReady = false },
        new AdminTeacher { Id = 2, Name = "Juan Pérez", Level = "DT.3", Years = 4, Papers = 3, Evaluation = 88, Training = 128, Research = 24, PromotionReady = true },
        new AdminTeacher { Id = 3, Name = "Ana Rodríguez", Level = "DT.1", Years = 4, Papers = 1, Evaluation = 90, Training = 96, Research = 0, PromotionReady = true },
        new AdminTeacher { Id = 4, Name = "Carlos López", Level = "DT.4", Years = 2, Papers = 3, Evaluation = 75, Training = 120, Research = 18, PromotionReady = false },
        new AdminTeacher { Id = 5, Name = "Laura Martínez", Level = "DT.2", Years = 4, Papers = 2, Evaluation = 85, Training = 96, Research = 12, PromotionReady = true },
    };

    private Dictionary<string, AdminLevelRequirement> _levelRequirements = new Dictionary<string, AdminLevelRequirement>
    {
        { "DT.1", new AdminLevelRequirement { NextLevel = "DT.2", Years = 4, Papers = 1, Evaluation = 75, Training = 96, Research = 0 } },
        { "DT.2", new AdminLevelRequirement { NextLevel = "DT.3", Years = 4, Papers = 2, Evaluation = 75, Training = 96, Research = 12 } },
        { "DT.3", new AdminLevelRequirement { NextLevel = "DT.4", Years = 4, Papers = 3, Evaluation = 75, Training = 128, Research = 24 } },
        { "DT.4", new AdminLevelRequirement { NextLevel = "DT.5", Years = 4, Papers = 5, Evaluation = 75, Training = 160, Research = 24 } },
    };

    private string _searchQuery { get; set; } = string.Empty;
    private string _levelFilter { get; set; } = "all";
    private string _activeTab { get; set; } = "teachers";
    private bool _showLevelDropdown { get; set; } = false;

    private List<AdminTeacher> _filteredTeachers => _teachersData
        .Where(teacher =>
            teacher.Name.ToLower().Contains(_searchQuery.ToLower()) &&
            (_levelFilter == "all" || teacher.Level == _levelFilter)
        )
        .ToList();

    private int _promotionEligibleCount => _teachersData.Count(t => t.PromotionReady);

    // Métodos para tabs y filtros
    private void SetActiveTab(string tabId)
    {
        _activeTab = tabId;
        _showLevelDropdown = false;
    }
    private void ToggleLevelDropdown()
    {
        _showLevelDropdown = !_showLevelDropdown;
    }
    private void SetLevelFilter(string level)
    {
        _levelFilter = level;
        _showLevelDropdown = false;
    }
}