@using Microsoft.AspNetCore.Components
@inject DocenteService DocenteService
@inject NavigationManager Navigation

<div class="space-y-4">
    <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
        <div class="p-6">
            <div class="flex flex-row items-center justify-between mb-4">
                <div>
                    <h3 class="text-lg font-medium">Proyectos de Investigación</h3>
                    <p class="text-sm text-gray-600">
                        Has completado @ResearchMonths de @(MesesNecesarios == -1 ? 0 : MesesNecesarios) meses
                        requeridos
                        en proyectos de investigación
                    </p>
                </div>
                <button
                    class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors"
                    @onclick="IrASubirPublicacion">
                    Registrar Nuevo Proyecto
                </button>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2 mb-4">
                <div class="bg-blue-600 h-2 rounded-full transition-all duration-300"
                    style="width: @(Math.Min((double)ResearchMonths / MesesNecesarios == -1 ? 1 : MesesNecesarios * 100, 100))%;">
                </div>
            </div>


            @if (Proyectos == null)
            {
                <div class="p-4 text-gray-500 text-center">Cargando proyectos...</div>
            }
            else if (!Proyectos.Any())
            {
                <div class="p-4 text-gray-500 text-center">No hay proyectos registrados.</div>
            }
            else
            {
                @foreach (var proyecto in Proyectos)
                {
                    <div class="border rounded-lg p-4 mb-4">
                        <div class="font-medium">@proyecto.Titulo</div>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-3">
                            <div>
                                <div class="text-sm font-medium text-gray-500">Fecha de inicio</div>
                                <div>@proyecto.FechaInicio.ToShortDateString()</div>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-500">Fecha estimada de finalización</div>
                                <div>@proyecto.FechaFin.ToShortDateString()</div>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-500">Rol en el proyecto</div>
                                <div>@proyecto.RolEnProyecto</div>
                            </div>
                            <div>
                                <div class="text-sm font-medium text-gray-500">Estado</div>
                                <span
                                    class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-amber-100 text-amber-800">@proyecto.Estado</span>
                            </div>
                        </div>
                    </div>
                }
            }


        </div>
    </div>
</div>

@code {
    [Parameter]
    public int MesesNecesarios { get; set; }
    private ProyectoInvestigacionDto[]? Proyectos;
    private int ResearchMonths = 0;

    protected override async Task OnInitializedAsync()
    {
        Proyectos = await DocenteService.getProyectos() ?? Array.Empty<ProyectoInvestigacionDto>();

        // Opcional: calcular meses de investigación sumando la duración de cada proyecto
        ResearchMonths = Proyectos.Sum(p => ((p.FechaFin.Year - p.FechaInicio.Year) * 12) + (p.FechaFin.Month -
        p.FechaInicio.Month));
    }
    private void IrASubirPublicacion()
    {
        Navigation.NavigateTo("/subir-proyecto");
    }
}