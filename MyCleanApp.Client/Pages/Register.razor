@page "/register"
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="min-h-screen bg-gradient-to-b from-blue-50 to-white flex items-center justify-center">
    <div class="w-full max-w-md">
        <div class="bg-white rounded-2xl shadow-2xl p-8 border border-blue-100">
            <h2 class="text-2xl text-center font-bold mb-4 text-blue-800">Registro de Usuario</h2>
            <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-semibold text-blue-900">Nombre:</label>
                        <InputText class="w-full border border-blue-200 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-400 focus:outline-none text-base" @bind-Value="registerModel.nombre" />
                    </div>
                    <div>
                        <label class="block text-sm font-semibold text-blue-900">Correo:</label>
                        <InputText class="w-full border border-blue-200 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-400 focus:outline-none text-base" @bind-Value="registerModel.correo" />
                    </div>
                    <div>
                        <label class="block text-sm font-semibold text-blue-900">Contrase침a:</label>
                        <InputText class="w-full border border-blue-200 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-400 focus:outline-none text-base" @bind-Value="registerModel.contrase침a" type="password" />
                    </div>
                    <div>
                        <label class="block text-sm font-semibold text-blue-900">Rol:</label>
                        <InputText class="w-full border border-blue-200 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-400 focus:outline-none text-base" @bind-Value="registerModel.rol" />
                    </div>
                </div>
                <div class="mt-6">
                    <button type="submit" class="w-full bg-blue-700 hover:bg-blue-800 text-white rounded-lg px-4 py-2 font-semibold flex items-center justify-center gap-2 shadow-md transition-all disabled:opacity-50" disabled="@isLoading">
                        @if (isLoading)
                        {
                            <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path></svg>
                            <span>Registrando...</span>
                        }
                        else
                        {
                            <span>Registrarse</span>
                        }
                    </button>
                </div>
            </EditForm>
            @if (!string.IsNullOrEmpty(message))
            {
                <div class="text-center text-blue-700 mt-4">@message</div>
            }
        </div>
    </div>
</div>

@code {
    private Usuario registerModel = new();
    private string message = string.Empty;
    private bool isLoading = false;

    private async Task HandleRegister()
    {
        isLoading = true;
        message = string.Empty;
        try
        {
            var response = await Http.PostAsJsonAsync("http://localhost:5015/api/usuarios", registerModel);
            if (response.IsSuccessStatusCode)
            {
                message = "Registro exitoso. Ahora puedes iniciar sesi칩n.";
                Navigation.NavigateTo("/login");
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                message = $"Error en el registro: {error}";
            }
        }
        catch (Exception ex)
        {
            message = $"Error inesperado: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    public class Usuario
    {
        public int id { get; set; }
        public string nombre { get; set; } = string.Empty;
        public string correo { get; set; } = string.Empty;
        public string contrase침a { get; set; } = string.Empty;
        public string rol { get; set; } = string.Empty;
    }
}
